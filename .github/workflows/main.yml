name: Cl

on:
  [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Start ngrok Tunnel for RDP
      run: |
        # Start ngrok tunnel in the background
        Start-Process -NoNewWindow -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389" 
        Start-Sleep -Seconds 5  # Give ngrok time to establish the tunnel

    - name: Retrieve ngrok Public URL with Retry
      run: |
        $maxRetries = 10
        $retryInterval = 5  # seconds
        $attempts = 0
        $ngrokUrl = ""

        # Retry logic
        while ($attempts -lt $maxRetries -and !$ngrokUrl) {
          try {
            $ngrokData = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
            $ngrokUrl = $ngrokData.tunnels | Where-Object {$_.proto -eq 'tcp'} | Select-Object -ExpandProperty public_url
          } catch {
            Write-Output "ngrok API not available yet. Retrying..."
            $attempts++
            Start-Sleep -Seconds $retryInterval
          }
        }

        # Output result
        if ($ngrokUrl) {
          Write-Output "The RDP public URL is: $ngrokUrl"
        } else {
          Write-Output "Failed to retrieve ngrok public URL after $maxRetries attempts."
          exit 1
        }

    - name: Output ngrok URL
      run: |
        echo "The public ngrok URL for RDP access is: $ngrokUrl"
